1. The Problem of “A Secure Person2Person (P2P) Micropayment System”（安全
的第三方支付使用者對使用者小額付款系統）
一套具安全傳輸的簡單網際網路第三方支付使用者對使用者小額付款（Micropayment）系
統。此系統包含三大功能：
一、第三方支付 Server 端對 Client 端（使用者）的統一管理，包含帳號管理、好友
名單管理、認證以及 Client 帳戶管理等。
二、Client 間即時通訊。
三、Client 與 Server 以及 Client 間的通訊，都可以各自加密，加密的鑰匙（encryption
key，又稱 secret key）由當下通訊的雙方議定。
本作業的目標是設計與實作一套簡單的好友間轉帳功能。同學將設計、實作一套安全傳輸
的簡單「安全的第三方支付使用者對使用者小額付款系統」包含 Client 與 multithreaded Server
端的軟體，以及安全傳輸的軟體撰寫。
Client 端的兩個主要功能：
 安全的與第三方支付 Server 的通訊
 一對一安全的 Client 間對談
Multi-threaded Server 端的主要功能：
 接受 Client 的安全連結，並根據要求（request）回覆訊息（reply）
安全通訊的主要功能：
 每一個 Client 與 Server 間，以及 Client 間的通訊，都必須加密，加密的鑰匙
（encryption key，又稱 secret key）由當下通訊的雙方議定。
2. Requirements
Computer Networks - YLS Fall 2023
2/6
 本作業所有的通訊皆須採用 TCP protocol 以達到可靠傳輸，分三階段繳交及驗收：
 第一階段，同學要先完成 Client 端的程式；
 第二階段完成 Multi-threaded Server 端程式；
 第三階段完成安全通訊的功能。
 可使用的語言及 Library：Unix/Linux Socket Programming(in C/C++)、Win Socket；不可
使用Java、C#、Python、......等高階語言。
A. Client
Client 端程式必須能夠：
a. 向 Server 註冊（註冊時輸入使用者名稱，每人預設帳戶餘額一萬）。
b. 登入助教所提供 Server 端程式（填入使用者名稱、Port Number）。
c. 向 Server 要最新的帳戶餘額、上線清單、Public key 並接收 Server 端的回覆。
d. 和其它 Client 執行轉帳功能（不可透過 Server 端轉送）。
e. 進行離線動作前需主動告知 Server 端程式。
上線清單包含的訊息為：
 上線的總人數
 線上的使用者名稱、其 IP address 以及可用來通訊的 port number。
B. Multi-Threaded Server
A multithreaded Server is capable of serving multiple requests in parallel. The Server will
create a separate thread to handle each of the connections for accepted requests. There will also be
a main thread, in which the Server listens for Clients that want to establish connections.
第二階段 Server 端程式的開發要能提供 Client 端的註冊與登入，發送 Client 目前的
帳戶餘額與上線清單的回覆訊息給 Client，以及接收處理 Client 端離線前的通知，Server
提供的功能請使用 thread 及 worker pool 的方式進行程式的開發，不要使用 fork。
C. Client 與 Server 溝通
Client 與 Server 間的溝通訊息主要有四種：
(1) Client 端向 Server 註冊：
Client 端傳給 Server 端的訊息為：
REGISTER#<UserAccountName>
Server 端會回給 Client 端註冊成功或不成功的訊息分別為：
100<space>OK<CRLF>
210<space>FAIL<CRLF>
(2) Client 端登入 Server：
Client 端傳給 Server 端的訊息為：
<UserAccountName>#<portNum>
若使用者有註冊過，Server 端會回給 Client 端上線清單，清單格式為：
Computer Networks - YLS Fall 2023
3/6
<accountBalance><CRLF>
<serverPublicKey><CRLF>
<number of accounts online><CRLF>
<userAccount1>#<userAccount1_IPaddr>#<userAccount1_portNum><CRLF>
<userAccount2>#<userAccount2_ IPaddr>#<userAccount2_portNum><CRLF>
...
若使用者尚未註冊過，Server 會回傳給 Client 端驗證失敗的訊息：
220<space>AUTH_FAIL<CRLF>
(3) Client 端向 Server 要最新的帳戶餘額與上線清單：
Client 端傳給 Server 端的訊息為：
List
Server 端會回給 Client 端上線清單，清單格式為：
<accountBalance><CRLF>
<serverPublicKey><CRLF>
<number of accounts online><CRLF>
<userAccount1>#<userAccount1_IPaddr>#<userAccount1_portNum><CRLF>
<userAccount2>#<userAccount2_ IPaddr>#<userAccount2_portNum><CRLF>
...
(4) Client 端結束程式：
Client 端傳給 Server 端的訊息為：
Exit
Server 端會回給 Client 端上線清單，清單格式為：
Bye<CRLF>
(5) Client 端送 micropayment transaction 訊息給 Server：
Client 端之間的訊息傳送格式為：
<MyUserAccountName>#<payAmount>#<PayeeUserAccountName>
本訊息 Client A 要用好友 B 的 public key 加密。好友 B 收到後用自己的 private
key 解密取得轉帳額度。確認金額後再用 Server 的 public key 將訊息加密，送給
Server（此處假設 B 不會竄改金額）。Server 拿到後用自己的 private key 解密並
更新雙方帳戶餘額。訊息內容假設都是 ASCII 字元文字（text）內容。
注意事項：Server 端不替 Client 端做任何訊息的 relay。
D. 安全傳輸
Socket 安全傳輸部分，請使用 openssl 這個 open source toolkits https://www.openssl.org/，
並且你的 source code 中使用 openssl toolkits 進行加密的安全傳輸。
